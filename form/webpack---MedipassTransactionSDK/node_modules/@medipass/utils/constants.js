'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _FUNDERS_FORMATTED;

/* ====== START: ERRORS ======= */
var ERROR_MESSAGES = {
  INTERNET_ERROR: 'We are unable to establish an internet connection. We will take you back once you are connected to the internet.',
  NETWORK_ERROR: 'There are issues connecting to the Medipass platform. Please refresh the page and try again.',
  SERVER_ERROR: 'There are issues connecting to the Medipass platform. Please refresh the page and try again.',
  PAYMENT_GATEWAY_ERROR: 'There are issues connecting to the payment gateway. Please refresh the page and try again.',
  PAYMENT_ERROR: 'An error occurred when processing the payment. Please try again. The card was not charged.',
  PAYMENT_GATEWAY_FIELDS: 'The payment card details you entered were invalid, please review the payment card credentials and try again.'
};
var ERROR_CODES = {
  USERNAME_ALREADY_EXISTS: 10002,
  PAYMENT_PROVIDER_PARAMETERS_INVALID: 10014,
  ACCOUNT_DOES_NOT_HAVE_ACCESS_TO_CHECKOUT_SESSION: 10277,
  CARD_FAILED: 'card-failed'
};
var STANDALONE_ERRORS = {
  noAPIKey: {
    code: 'noAPIKey',
    message: 'Attribute `apiKey` or `token` not found in SDK configuration.'
  },
  noAppID: {
    code: 'noAppID',
    message: 'Attribute `appId` not found in SDK configuration.'
  },
  providerNumberNotFound: {
    code: 'providerNumberNotFound',
    message: 'No providers found under the given provider number.'
  },
  providerNumberDoesNotMatchFunder: {
    code: 'providerNumberDoesNotMatchFunder',
    message: 'Provider number does not match the given funder.'
  }
};
/* ====== END: ERRORS ======= */

/* ====== START: DOCUMENTS ======= */

var DOCUMENT_STATUSES = {
  AVAILABLE: 'available',
  PENDING: 'pending',
  ACTIVE: 'active'
};
var DOCUMENT_TYPES = {
  APPLICATION: 'application',
  FORM: 'form'
};
var DOCUMENT_WORKFLOW_STATES = {
  INBOX: 'inbox',
  ASSIGNED: 'assigned',
  APPROVED: 'approved',
  DECLINED: 'declined',
  CANCELLED: 'cancelled',
  PARKED: 'parked',
  CEASED: 'ceased'
};
var DOCUMENT_WORKFLOW_STATES_HUMANIZED = {
  SUBMITTED: 'Submitted',
  UNDER_REVIEW: 'Under review',
  APPROVED: 'Approved'
};
/* ====== END: DOCUMENTS ======= */

/* ====== START: FORMS ======= */

var FORM_STATUSES = {
  PUBLISHED: 'published',
  DRAFT: 'draft'
};
/* ====== END: FORMS ======= */

/* ====== START: FORM APPLICATIONS ======= */

var FORM_APPLICATION_STATUSES = {
  PENDING: 'pending',
  APPROVED: 'approved',
  DECLINED: 'declined',
  CANCELLED: 'cancelled'
};
/* ====== END: FORM APPLICATIONS ======= */

/* ====== START: FUNDERS ======= */

var FUNDERS = {
  // Note: maps to funder.code
  ADF: 'adf',
  COMCARE: 'comcare',
  DVA: 'dva',
  GARRISON: 'ghs',
  HBF: 'hbf',
  HEALTHPOINT: 'healthpoint',
  HICAPS: 'nab',
  ICARE: 'icare',
  MEDICARE: 'medicare',
  NDIS: 'ndis',
  OHC: 'ohc',
  PATIENT: 'patient-funded',
  WCQ: 'wcq',
  WSV: 'wsv'
};
var FUNDERS_FORMATTED = (_FUNDERS_FORMATTED = {}, _FUNDERS_FORMATTED[FUNDERS.ADF] = 'Australian Defence Force', _FUNDERS_FORMATTED[FUNDERS.COMCARE] = 'Comcare', _FUNDERS_FORMATTED[FUNDERS.GARRISON] = 'Garrison', _FUNDERS_FORMATTED[FUNDERS.HBF] = 'HBF', _FUNDERS_FORMATTED[FUNDERS.HEALTHPOINT] = 'HEALTHPOINT', _FUNDERS_FORMATTED[FUNDERS.HICAPS] = 'HICAPS', _FUNDERS_FORMATTED[FUNDERS.ICARE] = 'icare', _FUNDERS_FORMATTED[FUNDERS.MEDICARE] = 'Medicare', _FUNDERS_FORMATTED[FUNDERS.NDIS] = 'NDIS', _FUNDERS_FORMATTED[FUNDERS.OHC] = 'Overseas health cover', _FUNDERS_FORMATTED[FUNDERS.PATIENT] = 'Patient funded', _FUNDERS_FORMATTED[FUNDERS.WCQ] = 'Workcover Queensland', _FUNDERS_FORMATTED[FUNDERS.WSV] = 'WorkSafe Victoria', _FUNDERS_FORMATTED);
/* ====== END: FUNDERS ======= */

/* ====== START: FUTURES ======= */

var FUTURE_STATUSES = {
  ACTIVE: 'active',
  PENDING: 'pending',
  COMPLETED: 'completed',
  CANCELLED: 'cancelled',
  DECLINED: 'declined',
  ERRORED: 'errored'
};
var FUTURE_TYPES = {
  HOLD: 'hold',
  SUBSCRIPTION: 'subscription',
  INSTALMENT_PLAN: 'instalment-plan'
};
var FUTURE_LABELS = {
  hold: 'Payment hold',
  subscription: 'Subscription',
  'instalment-plan': 'Instalment plan'
};
/* ====== END: FUTURES ======= */

/* ====== START: GARRISON ======= */

var EPISODE_INITIATOR_IDS = {
  COMMONWEALTH: 'commonwealth',
  EMERGENCY: 'emergency'
};
var NO_EP_ID_REASON_IDS = {
  ENTITLED_FAMILY_MEMBER: '1',
  FOREIGN_MEMBER: '2',
  CIVIC_ASSISTANCE: '3',
  OTHER: '4'
};
/* ====== END: GARRISON ======= */

/* ====== START: GATEWAY ======= */

var GATEWAY_CODES = {
  HICAPS_ERROR: '12',
  HICAPS_DOWN: '91',
  MEDICARE_DOWN: '3004'
};
/* ====== END: GATEWAY ======= */

/* ====== START: MISC ======= */

var AUS_STATES = ['Victoria', 'Tasmania', 'Western Australia', 'South Australia', 'Queensland', 'New South Wales', 'Australian Capital Territory', 'Northern Territory'];
/* ====== END: MISC ======= */

/* ====== START: PAYMENTS ======= */

var PAYMENT_FACILITIES = {
  HICAPS_GO: 'hicaps-go',
  MEDIPASS_PAYMENTS: 'medipass-payments'
};
var PAYMENT_PROVIDERS = {
  GOOGLE_PAY: 'google-pay',
  APPLE_PAY: 'apple-pay',
  PAYMENT_CARD: 'payment-card'
};
/* ====== START: PAYMENTS ======= */

/* ====== START: PRODUCT ======= */

var PRODUCTS = {
  BASIC: 'basic',
  PRO: 'pro'
};
var AVAILABLE_PRODUCTS = [PRODUCTS.BASIC, PRODUCTS.PRO];
var PRODUCT_FEATURES = {
  CLAIMING_ADFHS: 'claiming:adfhs',
  CLAIMING_BRIDGE: 'claiming:bridge',
  CLAIMING_COMCARE: 'claiming:comcare',
  CLAIMING_GHS: 'claiming:ghs',
  CLAIMING_ICARE: 'claiming:icare',
  CLAIMING_MEDICARE: 'claiming:medicare',
  CLAIMING_NDIS: 'claiming:ndis',
  CLAIMING_OHC: 'claiming:ohc',
  CLAIMING_PHI: 'claiming:phi',
  CLAIMING_PHI_QUOTES: 'claiming:phi.quotes',
  CLAIMING_WCQ: 'claiming:wcq',
  PAYMENTS_ASSISTED: 'payments:assisted',
  PAYMENTS_FULLY_PATIENT_FUNDED: 'payments:fully-patient-funded',
  PMS_INTEGRATION: 'pms:integration',
  REPORTING: 'reporting'
};
/* ====== END: PRODUCT ======= */

/* ====== START: STATUSES ======= */

var STATUSES = {
  ACTIVE: 'ACTIVE',
  DISABLED: 'DISABLED',
  NEW: 'NEW',
  INVITED: 'INVITED',
  UNVERIFIED: 'UNVERIFIED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED',
  ERRORED: 'ERRORED',
  PENDING: 'PENDING',
  EXPIRED: 'EXPIRED'
};
/* ====== START: STATUSES ======= */

/* ====== START: TRANSACTIONS ======= */

var PAYMENT_TYPES = {
  SALE: 'sale',
  REFUND: 'refund',
  IN_PERSON: 'inperson'
};
var TERMINAL_TRANSACTION_PAYMENT_TYPES = {
  CLAIM: 'claim',
  PAYMENT: 'payment'
};
var TRANSACTION_CLAIM_OPTIONS = {
  TERMINAL: 'terminal',
  PHONE: 'phone',
  GLASS: 'glass'
};
var TRANSACTION_PAYMENT_OPTIONS = {
  PAYMENT_AUTHORITY: 'payment-authority',
  PAY_IN_PERSON: 'pay-in-person',
  PROCESS_OUTSIDE_MEDIPASS: 'process-outside-medipass',
  TERMINAL: 'terminal',
  PHONE: 'phone',
  EXISTING_PAYMENT_CARD: 'existing-payment-card',
  NEW_PAYMENT_CARD: 'new-payment-card',
  PAYMENT_CARD: 'payment-card',
  APPLE_PAY: 'apple-pay',
  GOOGLE_PAY: 'google-pay',
  LINK: 'payment-link',
  HOLD: 'payment-hold',
  INSTALMENT_PLAN: 'instalment-plan'
};
var TRANSACTION_PLATFORM = {
  FUNDER: 'funder',
  VIRTUAL_TERMINAL: 'virtual-terminal'
};
var TRANSACTION_STATUSES = {
  DISABLED: 'disabled',
  ERRORED: 'errored',
  REQUESTED: 'requested',
  ACCEPTED: 'accepted',
  APPROVED: 'approved',
  REJECTED: 'rejected',
  REVERSED: 'reversed',
  CANCELLED: 'cancelled',
  VOIDED: 'voided',
  SKIPPED: 'skipped',
  REFUNDED: 'refunded',
  PENDING: 'pending',
  NEW: 'new',
  COMPLETED: 'completed',
  PARTIALLY_REFUNDED: 'partially-refunded',
  UNDER_REVIEW: 'under-review',
  SUBMITTED: 'submitted',
  OUTSTANDING: 'outstanding',
  DECLINED: 'declined',
  ARCHIVED: 'archived',
  PAID: 'paid',
  READY: 'ready'
};
var WORKFLOW_STATES = {
  INBOX: 'inbox',
  ASSIGNED: 'assigned',
  PARKED: 'parked',
  SUBMITTED: 'submitted',
  POSTED: 'posted',
  COMPLETED: 'completed',
  ERRORED: 'errored',
  ARCHIVED: 'archived',
  CANCELLED: 'cancelled',
  APPROVED: 'approved',
  ACCEPTED: 'accepted'
};
var GARRISON_WORKFLOW_STATES_HUMANIZED = {
  SUBMITTED: 'Submitted',
  UNDER_REVIEW: 'Under review',
  ACCEPTED: 'Accepted',
  COMPLETED: 'Completed'
};
var ICARE_WORKFLOW_STATES_HUMANIZED = {
  SUBMITTED: 'Submitted',
  APPROVED: 'Approved',
  COMPLETED: 'Completed',
  REJECTED: 'Rejected'
};
/* ====== END: TRANSACTIONS ======= */

/* ====== START: MEDICARE ======= */

var MEDICARE_FORMS = {
  ONLINE_CLAIMING_PROVIDER_AGREEMENT: 'Online Claiming Provider Agreement'
};
/* ====== END: MEDICARE ======= */

/* ====== START: HICAPS FORMS ======= */

var HICAPS_FORMS = {
  CLAIMING_PROVIDER_APPLICATION: 'HICAPS Claiming Application'
};
/* ====== END: HICAPS FORMS ======= */

/* ====== START: PMS ======= */

var PMS = ['Best Practice (Allied)', 'Best Practice (Premier)', 'Clinic to Cloud', 'Cliniko', 'Coreplus', 'Coviu', 'Dental4Windows', 'Doctors on Demand', 'Exact', 'Front Desk', 'Genie', 'Gensolve', 'Gentu', 'Halaxy / HealthKit', 'Iconpractice', 'Kalysys', 'Lysn', 'Medical Director', 'Medilink', 'Medirecords', 'MedTech', 'Myhealth1st', 'Nookal', 'Oasis', 'Owner.health', 'Optomate', 'Powerdiary', 'PPMP', 'PracSuite', 'Shexie', 'Splose', 'Sunix', 'TM2', 'VisitBase', 'ZedMed', 'Zurili', 'Other'];
/* ====== END: PMS ======= */

/* ====== START: REGIONS ======= */

var REGIONS = {
  au: 'au',
  uk: 'uk'
};
/* ====== END: REGIONS ======= */

/* ====== START: VERIFY MEMBER HEALTH FUNDS ======= */

var VERIFY_MEMBER_HEALTH_FUNDS_CODES = ['BUP'];
/* ====== END: VERIFY MEMBER HEALTH FUNDS ======= */

/* ====== START: INVOICE_ORIGINATING_FLOW ======= */

var INVOICE_ORIGINATING_FLOW = {
  ALLIED_PHI: 'allied-phi',
  COMCARE: 'comcare',
  DVA: 'dva',
  HEALTHPOINT: 'healthpoint',
  ICARE: 'icare',
  INSTALMENT_PLAN: 'instalment-plan',
  MEDICARE_BULK_BILLED: 'medicare-bulk-billed',
  MEDICARE_PATIENT_CLAIM: 'medicare-patient-claim',
  NDIS: 'ndis',
  OVERSEAS_HEALTH_COVER: 'overseas-health-cover',
  PATIENT_FUNDED: 'patient-funded',
  VIRTUAL_TERMINAL: 'virtual-terminal',
  WORK_COVER_QUEENSLAND: 'wcq',
  WORKSAFE_VICTORIA: 'wsv'
};
/* ====== END: INVOICE_ORIGINATING_FLOW ======= */

/* ====== START: STAFF ======= */

var STAFF_TYPES = {
  LOCATION: 'location',
  PERSON: 'person'
};
/* ====== END: STAFF ======= */

exports.AUS_STATES = AUS_STATES;
exports.AVAILABLE_PRODUCTS = AVAILABLE_PRODUCTS;
exports.DOCUMENT_STATUSES = DOCUMENT_STATUSES;
exports.DOCUMENT_TYPES = DOCUMENT_TYPES;
exports.DOCUMENT_WORKFLOW_STATES = DOCUMENT_WORKFLOW_STATES;
exports.DOCUMENT_WORKFLOW_STATES_HUMANIZED = DOCUMENT_WORKFLOW_STATES_HUMANIZED;
exports.EPISODE_INITIATOR_IDS = EPISODE_INITIATOR_IDS;
exports.ERROR_CODES = ERROR_CODES;
exports.ERROR_MESSAGES = ERROR_MESSAGES;
exports.FORM_APPLICATION_STATUSES = FORM_APPLICATION_STATUSES;
exports.FORM_STATUSES = FORM_STATUSES;
exports.FUNDERS = FUNDERS;
exports.FUNDERS_FORMATTED = FUNDERS_FORMATTED;
exports.FUTURE_LABELS = FUTURE_LABELS;
exports.FUTURE_STATUSES = FUTURE_STATUSES;
exports.FUTURE_TYPES = FUTURE_TYPES;
exports.GARRISON_WORKFLOW_STATES_HUMANIZED = GARRISON_WORKFLOW_STATES_HUMANIZED;
exports.GATEWAY_CODES = GATEWAY_CODES;
exports.HICAPS_FORMS = HICAPS_FORMS;
exports.ICARE_WORKFLOW_STATES_HUMANIZED = ICARE_WORKFLOW_STATES_HUMANIZED;
exports.INVOICE_ORIGINATING_FLOW = INVOICE_ORIGINATING_FLOW;
exports.MEDICARE_FORMS = MEDICARE_FORMS;
exports.NO_EP_ID_REASON_IDS = NO_EP_ID_REASON_IDS;
exports.PAYMENT_FACILITIES = PAYMENT_FACILITIES;
exports.PAYMENT_PROVIDERS = PAYMENT_PROVIDERS;
exports.PAYMENT_TYPES = PAYMENT_TYPES;
exports.PMS = PMS;
exports.PRODUCTS = PRODUCTS;
exports.PRODUCT_FEATURES = PRODUCT_FEATURES;
exports.REGIONS = REGIONS;
exports.STAFF_TYPES = STAFF_TYPES;
exports.STANDALONE_ERRORS = STANDALONE_ERRORS;
exports.STATUSES = STATUSES;
exports.TERMINAL_TRANSACTION_PAYMENT_TYPES = TERMINAL_TRANSACTION_PAYMENT_TYPES;
exports.TRANSACTION_CLAIM_OPTIONS = TRANSACTION_CLAIM_OPTIONS;
exports.TRANSACTION_PAYMENT_OPTIONS = TRANSACTION_PAYMENT_OPTIONS;
exports.TRANSACTION_PLATFORM = TRANSACTION_PLATFORM;
exports.TRANSACTION_STATUSES = TRANSACTION_STATUSES;
exports.VERIFY_MEMBER_HEALTH_FUNDS_CODES = VERIFY_MEMBER_HEALTH_FUNDS_CODES;
exports.WORKFLOW_STATES = WORKFLOW_STATES;
